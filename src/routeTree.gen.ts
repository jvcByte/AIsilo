/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AboutRouteImport } from './routes/about'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as MarketplaceIndexRouteImport } from './routes/marketplace/index'
import { Route as MarketplaceIdRouteImport } from './routes/marketplace/$id'
import { Route as AuthenticatedUploadModelRouteImport } from './routes/_authenticated/upload-model'
import { Route as AuthenticatedTempRouteRouteImport } from './routes/_authenticated/temp-route'
import { Route as AuthenticatedDownloadModelRouteImport } from './routes/_authenticated/download-model'
import { Route as AuthenticatedDecryptRouteImport } from './routes/_authenticated/decrypt'
import { Route as AuthenticatedDashboardRouteImport } from './routes/_authenticated/dashboard'
import { Route as AuthenticatedCopyPasteRouteImport } from './routes/_authenticated/copy-paste'
import { Route as AuthenticatedActivitiesRouteImport } from './routes/_authenticated/activities'
import { Route as MarketplaceBuyBuyRouteImport } from './routes/marketplace/$buy.buy'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const MarketplaceIndexRoute = MarketplaceIndexRouteImport.update({
  id: '/marketplace/',
  path: '/marketplace/',
  getParentRoute: () => rootRouteImport,
} as any)
const MarketplaceIdRoute = MarketplaceIdRouteImport.update({
  id: '/marketplace/$id',
  path: '/marketplace/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedUploadModelRoute =
  AuthenticatedUploadModelRouteImport.update({
    id: '/upload-model',
    path: '/upload-model',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedTempRouteRoute = AuthenticatedTempRouteRouteImport.update({
  id: '/temp-route',
  path: '/temp-route',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedDownloadModelRoute =
  AuthenticatedDownloadModelRouteImport.update({
    id: '/download-model',
    path: '/download-model',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedDecryptRoute = AuthenticatedDecryptRouteImport.update({
  id: '/decrypt',
  path: '/decrypt',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedDashboardRoute = AuthenticatedDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedCopyPasteRoute = AuthenticatedCopyPasteRouteImport.update({
  id: '/copy-paste',
  path: '/copy-paste',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedActivitiesRoute = AuthenticatedActivitiesRouteImport.update({
  id: '/activities',
  path: '/activities',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const MarketplaceBuyBuyRoute = MarketplaceBuyBuyRouteImport.update({
  id: '/marketplace/$buy/buy',
  path: '/marketplace/$buy/buy',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/activities': typeof AuthenticatedActivitiesRoute
  '/copy-paste': typeof AuthenticatedCopyPasteRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/decrypt': typeof AuthenticatedDecryptRoute
  '/download-model': typeof AuthenticatedDownloadModelRoute
  '/temp-route': typeof AuthenticatedTempRouteRoute
  '/upload-model': typeof AuthenticatedUploadModelRoute
  '/marketplace/$id': typeof MarketplaceIdRoute
  '/marketplace': typeof MarketplaceIndexRoute
  '/marketplace/$buy/buy': typeof MarketplaceBuyBuyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/activities': typeof AuthenticatedActivitiesRoute
  '/copy-paste': typeof AuthenticatedCopyPasteRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/decrypt': typeof AuthenticatedDecryptRoute
  '/download-model': typeof AuthenticatedDownloadModelRoute
  '/temp-route': typeof AuthenticatedTempRouteRoute
  '/upload-model': typeof AuthenticatedUploadModelRoute
  '/marketplace/$id': typeof MarketplaceIdRoute
  '/marketplace': typeof MarketplaceIndexRoute
  '/marketplace/$buy/buy': typeof MarketplaceBuyBuyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/_authenticated/activities': typeof AuthenticatedActivitiesRoute
  '/_authenticated/copy-paste': typeof AuthenticatedCopyPasteRoute
  '/_authenticated/dashboard': typeof AuthenticatedDashboardRoute
  '/_authenticated/decrypt': typeof AuthenticatedDecryptRoute
  '/_authenticated/download-model': typeof AuthenticatedDownloadModelRoute
  '/_authenticated/temp-route': typeof AuthenticatedTempRouteRoute
  '/_authenticated/upload-model': typeof AuthenticatedUploadModelRoute
  '/marketplace/$id': typeof MarketplaceIdRoute
  '/marketplace/': typeof MarketplaceIndexRoute
  '/marketplace/$buy/buy': typeof MarketplaceBuyBuyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/login'
    | '/activities'
    | '/copy-paste'
    | '/dashboard'
    | '/decrypt'
    | '/download-model'
    | '/temp-route'
    | '/upload-model'
    | '/marketplace/$id'
    | '/marketplace'
    | '/marketplace/$buy/buy'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/login'
    | '/activities'
    | '/copy-paste'
    | '/dashboard'
    | '/decrypt'
    | '/download-model'
    | '/temp-route'
    | '/upload-model'
    | '/marketplace/$id'
    | '/marketplace'
    | '/marketplace/$buy/buy'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/about'
    | '/login'
    | '/_authenticated/activities'
    | '/_authenticated/copy-paste'
    | '/_authenticated/dashboard'
    | '/_authenticated/decrypt'
    | '/_authenticated/download-model'
    | '/_authenticated/temp-route'
    | '/_authenticated/upload-model'
    | '/marketplace/$id'
    | '/marketplace/'
    | '/marketplace/$buy/buy'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  AboutRoute: typeof AboutRoute
  LoginRoute: typeof LoginRoute
  MarketplaceIdRoute: typeof MarketplaceIdRoute
  MarketplaceIndexRoute: typeof MarketplaceIndexRoute
  MarketplaceBuyBuyRoute: typeof MarketplaceBuyBuyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/marketplace/': {
      id: '/marketplace/'
      path: '/marketplace'
      fullPath: '/marketplace'
      preLoaderRoute: typeof MarketplaceIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/marketplace/$id': {
      id: '/marketplace/$id'
      path: '/marketplace/$id'
      fullPath: '/marketplace/$id'
      preLoaderRoute: typeof MarketplaceIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/upload-model': {
      id: '/_authenticated/upload-model'
      path: '/upload-model'
      fullPath: '/upload-model'
      preLoaderRoute: typeof AuthenticatedUploadModelRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/temp-route': {
      id: '/_authenticated/temp-route'
      path: '/temp-route'
      fullPath: '/temp-route'
      preLoaderRoute: typeof AuthenticatedTempRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/download-model': {
      id: '/_authenticated/download-model'
      path: '/download-model'
      fullPath: '/download-model'
      preLoaderRoute: typeof AuthenticatedDownloadModelRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/decrypt': {
      id: '/_authenticated/decrypt'
      path: '/decrypt'
      fullPath: '/decrypt'
      preLoaderRoute: typeof AuthenticatedDecryptRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/copy-paste': {
      id: '/_authenticated/copy-paste'
      path: '/copy-paste'
      fullPath: '/copy-paste'
      preLoaderRoute: typeof AuthenticatedCopyPasteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/activities': {
      id: '/_authenticated/activities'
      path: '/activities'
      fullPath: '/activities'
      preLoaderRoute: typeof AuthenticatedActivitiesRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/marketplace/$buy/buy': {
      id: '/marketplace/$buy/buy'
      path: '/marketplace/$buy/buy'
      fullPath: '/marketplace/$buy/buy'
      preLoaderRoute: typeof MarketplaceBuyBuyRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface AuthenticatedRouteRouteChildren {
  AuthenticatedActivitiesRoute: typeof AuthenticatedActivitiesRoute
  AuthenticatedCopyPasteRoute: typeof AuthenticatedCopyPasteRoute
  AuthenticatedDashboardRoute: typeof AuthenticatedDashboardRoute
  AuthenticatedDecryptRoute: typeof AuthenticatedDecryptRoute
  AuthenticatedDownloadModelRoute: typeof AuthenticatedDownloadModelRoute
  AuthenticatedTempRouteRoute: typeof AuthenticatedTempRouteRoute
  AuthenticatedUploadModelRoute: typeof AuthenticatedUploadModelRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedActivitiesRoute: AuthenticatedActivitiesRoute,
  AuthenticatedCopyPasteRoute: AuthenticatedCopyPasteRoute,
  AuthenticatedDashboardRoute: AuthenticatedDashboardRoute,
  AuthenticatedDecryptRoute: AuthenticatedDecryptRoute,
  AuthenticatedDownloadModelRoute: AuthenticatedDownloadModelRoute,
  AuthenticatedTempRouteRoute: AuthenticatedTempRouteRoute,
  AuthenticatedUploadModelRoute: AuthenticatedUploadModelRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  AboutRoute: AboutRoute,
  LoginRoute: LoginRoute,
  MarketplaceIdRoute: MarketplaceIdRoute,
  MarketplaceIndexRoute: MarketplaceIndexRoute,
  MarketplaceBuyBuyRoute: MarketplaceBuyBuyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
